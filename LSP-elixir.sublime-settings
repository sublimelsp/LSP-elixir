{
	"command": ["$server_path"],
	"languages": [
		{
			"languageId": "elixir",
			"scopes": [
				"source.elixir"
			],
			"syntaxes": [
				"Packages/Elixir/Syntaxes/Elixir.tmLanguage"
			]
		}
	],
	"initializationOptions": {},
	"settings": {
		"elixirLS": {
			// Run ElixirLS's rapid Dialyzer when code is saved
			"dialyzerEnabled": true,

			// Dialyzer options to enable or disable warnings.
			//
			// See Dialyzer's documentation for explanation of each option:
			//   http://erlang.org/doc/man/dialyzer.html
			//
			// Note that the `race_conditions` option is unsupported.
			"dialyzerWarnOpts": [
				// "error_handling",
				// "no_behaviours",
				// "no_contracts",
				// "no_fail_call",
				// "no_fun_app",
				// "no_improper_lists",
				// "no_match",
				// "no_missing_calls",
				// "no_opaque",
				// "no_return",
				// "no_undefined_callbacks",
				// "no_unused",
				// "overspecs",
				// "specdiffs",
				// "underspecs",
				// "unknown",
				// "unmatched_returns",
			],

			// Formatter to use for Dialyzer warnings
			// Options are:
			//   * dialyzer - Original Dialyzer format
			//   * dialyxir_short - Same as `mix dialyzer --format short`
			//   * dialyxir_long - Same as `mix dialyzer --format long`
			"dialyzerFormat": "dialyxir_long",

			// Mix environment to use for compilation
			"mixEnv": "test",

			// Mix target to use for compilation (requires Elixir >= 1.8)
			"mixTarget": null,

			// Subdirectory containing Mix project if not in the project root
			"projectDir": null,

			// Automatically fetch project dependencies when compiling
			"fetchDeps": true,
		}
	}
}
